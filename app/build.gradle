plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'com.google.gms.google-services'
    id 'com.google.devtools.ksp' version '1.7.0-1.0.6'
    id 'kotlin-kapt'
    id 'com.google.android.libraries.mapsplatform.secrets-gradle-plugin'
    id 'dagger.hilt.android.plugin'
}

android {
    compileSdk 32

    defaultConfig {
        applicationId "com.kks.nimblesurveyjetpackcompose"
        minSdk 21
        targetSdk 32
        versionCode 1
        versionName "0.1.0"

        testInstrumentationRunner "com.kks.nimblesurveyjetpackcompose.di.CustomTestRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }
        release {
            minifyEnabled true
            shrinkResources true
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        compose true
    }

    composeOptions {
        kotlinCompilerExtensionVersion compose_version
    }

    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }

    def props = new Properties()
    new File(rootDir,"signing.properties").withInputStream { s ->
        props.load(s)
    }

    flavorDimensions "version"
    productFlavors {
        prod {
            dimension "version"
            applicationId "com.kks.nimblesurveyjetpackcompose"
            buildConfigField("String", "BASE_URL", "\"https://survey-api.nimblehq.co/\"")
        }

        dev {
            dimension "version"
            // Staging AppId should be different from the real production.
            applicationId "com.kks.nimblesurveyjetpackcomposestaging"
            buildConfigField("String", "BASE_URL", "\"https://survey-api.nimblehq.co/\"")
        }
    }

    signingConfigs {
        //keytool -genkey -v -keystore debug.keystore -alias debug-key-alias -keyalg RSA -keysize 2048 -validity 10000
        debug {
            storeFile file("../config/debug.keystore")
            storePassword "123456"
            keyAlias "debug-key-alias"
            keyPassword "123456"
        }
        release {
            try {
                storeFile file("../config/nimblesurveycompose.keystore")
                storePassword props.getProperty("KEYSTORE_PASSWORD")
                keyAlias props.getProperty("KEY_ALIAS")
                keyPassword props.getProperty("KEY_PASSWORD")
            }
            catch (ex) {
                throw new InvalidUserDataException("You should define KEYSTORE_PASSWORD and KEY_PASSWORD in gradle.properties.")
            }
        }
    }

    applicationVariants.all { variant ->
        kotlin.sourceSets {
            getByName(variant.name) {
                kotlin.srcDir("build/generated/ksp/${variant.name}/kotlin")
            }
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions.jvmTarget = "1.8"

    lintOptions {
        abortOnError false
    }

    configurations {
        androidTestImplementation {
            exclude group: 'io.mockk', module: 'mockk-agent-jvm'
        }
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.material:material:$compose_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_runtime_version"
    implementation "androidx.activity:activity-compose:$activity_compose_version"
    implementation "androidx.constraintlayout:constraintlayout-compose:$constraint_compose_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:2.4.1"

    // Firebase
    implementation platform('com.google.firebase:firebase-bom:30.3.1')
    implementation 'com.google.firebase:firebase-analytics-ktx'

    // Coil
    implementation "io.coil-kt:coil-compose:$coil_version"

    // Compose Destination
    implementation "io.github.raamcosta.compose-destinations:core:$compose_destination_version"
    ksp "io.github.raamcosta.compose-destinations:ksp:$compose_destination_version"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation("com.squareup.moshi:moshi:$moshiVersion")
    kapt("com.squareup.moshi:moshi-kotlin-codegen:$moshiVersion")
    implementation("com.squareup.retrofit2:converter-moshi:2.9.0")
    implementation("com.squareup.moshi:moshi-kotlin:$moshiVersion")
    implementation("com.squareup.moshi:moshi-adapters:1.12.0")

    // Okhttp
    implementation("com.squareup.okhttp3:okhttp:$okhttp_version")
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_logging_version"

    //Dagger - Hilt
    implementation 'com.google.dagger:hilt-android:2.42'
    kapt 'com.google.dagger:hilt-compiler:2.42'
    implementation "androidx.hilt:hilt-navigation-compose:$hilt_compose_version"

    // Timber
    implementation("com.jakewharton.timber:timber:$timber_version")

    // Chucker
    debugImplementation "com.github.chuckerteam.chucker:library:$chucker_version"
    releaseImplementation "com.github.chuckerteam.chucker:library-no-op:$chucker_version"

    // Mockk
    testImplementation "io.mockk:mockk:$mockk_version"
    testImplementation "io.mockk:mockk-agent-jvm:$mockk_version"
    androidTestImplementation "io.mockk:mockk-android:$mockk_version"
    androidTestImplementation "io.mockk:mockk-agent-jvm:$mockk_version"

    testImplementation 'junit:junit:4.13.2'
    // For runBlockingTest, CoroutineDispatcher etc.
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_test_version"
    // For InstantTaskExecutorRule
    testImplementation "androidx.arch.core:core-testing:$core_testing_version"
    // Turbine
    testImplementation "app.cash.turbine:turbine:$turbine_version"

    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_version"

    // For instrumented tests.
    androidTestImplementation 'com.google.dagger:hilt-android-testing:2.38.1'
    // ...with Kotlin.
    kaptAndroidTest 'com.google.dagger:hilt-android-compiler:2.38.1'
}
